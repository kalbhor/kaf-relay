[app]
max_failovers = -1 # infinite
log_level = "debug"
metrics_server_addr = ":7081"

# In failover mode, if we breach the lag threshold in serverA compared to serverB we switch over to serverB immediately
lag_threshold = 100

# Frequency at which we need to poll for healthiness/lags
node_health_check_frequency = "500ms"

# Max request wait time to check if a node is down
max_request_duration = "100ms"

# Kafka client config common to all upstream sources ([[sources]]).
initial_offset = "start"
instance_id = "client_instance_id"
group_id = "consumer_group"

# Configuration for retry backoff settings.
# The retry backoff feature can be enabled or disabled.
# The minimum and maximum backoff durations can be specified.
[app.retry_backoff]
enable = true
min = "1s"
max = "10s"

# Map of topics from the source to sync to the target.
# source_topic => target_topic:optional_target_partition
# If the target partition is not specified, whatever partition a message
# was received from the source, the same partition is written to the target.
[[topics]]
source_topic1 = "target_topic1:1"
source_topic2 = "target_topic2"


[[sources]]
name = "node1"
servers = ["node1:9092"]
session_timeout = "6s"
enable_auth = true
sasl_mechanism = "PLAIN"
username = "user-x"
password = "pass-x"
max_wait_time = "10ms"
max_failovers = -1 # infinite

enable_tls = false
client_key_path = ""
client_cert_path = ""
ca_cert_path = ""

enable_log = false

[[sources]]
name = "node2"
servers = ["node2:9092"]
session_timeout = "6s"
enable_auth = true
sasl_mechanism = "PLAIN"
username = "user-x"
password = "pass-x"
max_wait_time = "10ms"
max_failovers = -1 # infinite

enable_tls = false
client_key_path = ""
client_cert_path = ""
ca_cert_path = ""

enable_log = false


# Destination kafka producer configuration
[target]
name = "node3"
servers = ["node3:9092"]
enable_auth = true
sasl_mechanism = "PLAIN" # PLAIN/SCRAM-SHA-256/SCRAM-SHA-512
username = "user-y"
password = "pass-y"
max_retries = -1
enable_idempotency = true
commit_ack_type = "cluster"
flush_frequency = "20ms"
session_timeout = "6s"
flush_batch_size = 1000
batch_size = 1000
max_message_bytes = 10000000

enable_tls = false
client_key_path = ""
client_cert_path = ""
ca_cert_path = ""

enable_log = false

# Custom go-plugin filter to load to filter messages when relaying
[filter.testfilter]
config = '''
{
    "address": ["127.0.0.1:6379"],
    "username": "",
    "password": "",
    "db": 10,
    "max_active": 50,
    "max_idle": 20,
    "dial_timeout": 3000,
    "read_timeout": 3000,
    "write_timeout": 3000,
    "idle_timeout": 30000
}
'''